@page "/notes"
@using QuantumPMTestTask.Data
@using QuantumPMTestTask.Services
@using QuantumPMTestTask.Utils
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inherits OwningComponentBase<NoteService>

@*Create button*@
<a href="/create" class="create-button">Create</a>

@if (noteModel != null && noteModel.Count > 0)
{
    @foreach (var item in noteModel)
    {
        <div class="note-container mb-3 p-3 shadow-sm">
            <div class="note-title"><strong>@item.NoteTitle</strong></div>
            <ExpandableText Text="@item.NoteText" MaxVisibleCharacters="100" />
            @*Delete button*@
            <button @onclick="(() => ConfirmDelete(item))" class="delete-button">Delete</button>
            @*Edit button*@
            <a href="/edit/@item.Id" class="edit-button">Edit</a>
        </div>
    }
}
else
{
    <p>No notes found.</p>
}

@code{
    public System.Collections.Generic.IList<NoteModel> noteModel;

    protected override void OnInitialized()
    {
        noteModel = Service.GetAllNotes();
    }
    
    private async Task ConfirmDelete(NoteModel note)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete \"{note.NoteTitle}\"?");
        if (confirmed)
        {
            DeleteNote(note);
        }
    }

    private void DeleteNote(NoteModel note)
    {
        if (note != null)
        {
            bool isDeleted = Service.Delete(note);
            if (isDeleted)
            {
                noteModel = Service.GetAllNotes();
                StateHasChanged();
            }
        }
    }
}

